AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Severless MQ Dashboard generator

Metadata:
  AWS::ServerlessRepo::Application:
    Name: mq-dashboards
    Description: AmazonMQ Dashboards
    Author: Sam Andaluri
    SpdxLicenseId: Apache-2.0
    LicenseUrl: license.txt
    ReadmeUrl: README.md
    Labels: ['amazon-mq']
    HomePageUrl: https://github.com/sam-andaluri/mqdashboard
    SemanticVersion: 0.4.3
    SourceCodeUrl: https://github.com/sam-andaluri/mqdashboard

Parameters:
  CustomerName:
    Type: String
    Default: "Customer"
    Description: (Required) Customer name.
  BrokerRegion:
    Type: String
    Default: "us-east-1"
    Description: (Required) AWS Region.
  MainDBInterval:
    Type: String
    Default: "rate(30 minutes)"
    Description: (Required) CW Event schedule interval for main dashboard that enumerates brokers. Default every 12 hours.
  BrokerDBInterval:
    Type: String
    Default: "rate(30 minutes)"
    Description: (Required) CW Event schedule interval for broker dashboard that enumerates queues and topics. Default every 12 hours.
  ObjectDbInterval:
    Type: String
    Default: "rate(30 minutes)"
    Description: (Required) CW Event schedule interval for object dashboard that generates dashboard for queues and topics. Default every 12 hours.
  IncludeAdvisoryTopics:
    Type: String
    Default: "NO"
    Description: Include advisory topics. Default NO.
    AllowedValues:
      - "YES"
      - "NO"
  ProvisionAlarms:
    Type: String
    Default: "YES"
    AllowedValues:
      - "YES"
      - "NO"
    Description: Add alarms for brokers, queues and topics. Default YES.
  AlarmTopic:
    Type: String
    Default: "amazonmq-operations"
    Description: SNS Topic for alarm notifications.
  AlarmEmail:
    Type: String
    Default: "ops@email.com"
    Description: Email where the alarms are sent.

Resources:
  SnsTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: !Ref AlarmTopic
      Subscription:
        - Protocol: email
          Endpoint: !Ref AlarmEmail

  MainDashboard:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.7
      CodeUri: ./main_dashboard
      Description: 'Main AmazonMQ Dashboard that lists all brokers in a region'
      MemorySize: 128
      Timeout: 60
      Policies:
        - AmazonMQReadOnlyAccess
        - CloudWatchFullAccess
      Environment:
        Variables:
          MQ_REGION: !Ref BrokerRegion
          CUSTOMER_NAME: !Ref CustomerName
      Events:
        MainInterval:
          Type: Schedule
          Properties:
            Schedule: !Ref MainDBInterval

  BrokerDashboard:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.7
      CodeUri: ./broker_dashboard
      Description: 'Dashboard for a given broker and its associated queues and topics'
      MemorySize: 128
      Timeout: 60
      Policies:
        - AmazonMQReadOnlyAccess
        - CloudWatchFullAccess
      Environment:
        Variables:
          MQ_REGION: !Ref BrokerRegion
          INCLUDE_ADVISORY: !Ref IncludeAdvisoryTopics
          PROVISION_ALARMS: !Ref ProvisionAlarms
          SNS_TOPIC_ARN: !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${AlarmTopic}

      Events:
        BrokerInterval:
          Type: Schedule
          Properties:
            Schedule: !Ref BrokerDBInterval

  ObjectDashboard:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.7
      CodeUri: ./object_dashboard
      Description: 'Dashboard for a given queue or topic'
      MemorySize: 128
      Timeout: 60
      Policies:
        - AmazonMQReadOnlyAccess
        - CloudWatchFullAccess
      Environment:
        Variables:
          MQ_REGION: !Ref BrokerRegion
          INCLUDE_ADVISORY: !Ref IncludeAdvisoryTopics
          SNS_TOPIC_ARN: !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${AlarmTopic}
      Events:
        ObjectInterval:
          Type: Schedule
          Properties:
            Schedule: !Ref ObjectDbInterval
